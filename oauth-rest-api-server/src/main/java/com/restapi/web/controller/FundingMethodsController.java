package com.restapi.web.controller;

import com.restapi.web.dto.FundingMethod;
import com.restapi.web.dto.FundingMethodDetails;
import com.restapi.web.repository.FundingMethodRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static org.apache.commons.lang3.RandomStringUtils.randomNumeric;

@Controller
public class FundingMethodsController {

    @Autowired
    // Which is auto-generated by Spring, we will use it to handle the data
    private FundingMethodRepository fundingMethodRepository;

    public FundingMethodsController() {
        super();
    }

    // API - read
    @PreAuthorize("#oauth2.hasScope('read')")
    @RequestMapping(method = RequestMethod.GET, value = "/funding_methods")
    @ResponseBody
    public Map<String, List<FundingMethod>> getFundingMethods() {
        Map<String, List<FundingMethod>> map = new HashMap<>();
        List<FundingMethod> fundingMethods = (List<FundingMethod>) fundingMethodRepository.findAll();
        map.put("funding_methods", fundingMethods);
        return map;
    }

    // API - write
    @PreAuthorize("#oauth2.hasScope('write')")
    @RequestMapping(method = RequestMethod.POST, value = "/funding_methods")
    @ResponseStatus(HttpStatus.OK)
    @ResponseBody
    public FundingMethod addFundingMethod(@RequestParam String name, @RequestParam String status, @RequestParam String type,
                                 @RequestParam String bin, @RequestParam String tail,
                                 @RequestParam String expiration_date) {
        FundingMethod fundingMethod = new FundingMethod();

        fundingMethod.setId(Long.parseLong(randomNumeric(2)));
        fundingMethod.setName(name);
        fundingMethod.setStatus(status);
        fundingMethod.setType(type);

        FundingMethodDetails details = new FundingMethodDetails(bin, tail, expiration_date);
        fundingMethod.setDetails(details);

        fundingMethodRepository.save(fundingMethod);

        return fundingMethod;
    }
}
