package com.restapi.web.controller;

import com.restapi.web.dto.Transaction;
import com.restapi.web.repository.TransactionRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.math.BigDecimal;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static org.apache.commons.lang3.RandomStringUtils.randomNumeric;

@Controller
public class TransactionsController {

    @Autowired
    // Which is auto-generated by Spring, we will use it to handle the data
    private TransactionRepository transferRepository;

    public TransactionsController() {
        super();
    }

    // API - read
    @PreAuthorize("#oauth2.hasScope('read')")
    @RequestMapping(method = RequestMethod.GET, value = "/transacstions/{id}")
    @ResponseBody
    public Transaction findById(@PathVariable final long id) {
        return new Transaction(Long.parseLong(randomNumeric(10)), "MerchantTx" + randomNumeric(2));
    }

    // API - read
    @PreAuthorize("#oauth2.hasScope('read')")
    @RequestMapping(method = RequestMethod.GET, value = "/transactions")
    @ResponseBody
    public Map<String, List<Transaction>> getTransfers() {
        Map<String, List<Transaction>> map = new HashMap<>();
        List<Transaction> transactions = (List<Transaction>) transferRepository.findAll();
        map.put("transactions", transactions);
        return map;
    }

    // API - write
    @PreAuthorize("#oauth2.hasScope('write')")
    @RequestMapping(method = RequestMethod.POST, value = "/deposits")
    @ResponseStatus(HttpStatus.OK)
    @ResponseBody
    public Transaction deposit(@RequestParam BigDecimal amount, @RequestParam String currency,
                               @RequestParam int funding_method_id) {
        Transaction transaction = new Transaction();

        transaction.setUnique_id(Long.parseLong(randomNumeric(10)));
        transaction.setTransaction_id("MerchantTx" + randomNumeric(2));
        transaction.setUsage("Deposit");
        transaction.setAmount(amount);
        transaction.setCurrency(currency);
        transaction.setSource_wallet_id("customer@ezeewallet.com");
        transaction.setReturn_success_url("http://example.com/success");
        transaction.setReturn_failure_url("http://example.com/failure");
        transaction.setStatus("approved");

        // Set current date
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
        Date date = new Date();
        transaction.setDate(dateFormat.format(date));

        transferRepository.save(transaction);

        return transaction;
    }
}
